(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{127:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(8),i=(n(0),n(172)),o={id:"introduction",title:"Introduction",sidebar_label:"Introduction",slug:"/core/state"},c={unversionedId:"packages/core/features/state/introduction",id:"packages/core/features/state/introduction",isDocsHomePage:!1,title:"Introduction",description:"WIP docs!",source:"@site/docs/packages/core/features/state/Introduction.md",slug:"/core/state",permalink:"/documentation/docs/core/state",editUrl:"https://github.com/sid-r-singh/documentation/tree/develop/docs/packages/core/features/state/Introduction.md",version:"current",lastUpdatedAt:1615656733,formattedLastUpdatedAt:"3/13/2021",sidebar_label:"Introduction",sidebar:"docs",previous:{title:"Methods",permalink:"/documentation/docs/core/agile-instance/methods"},next:{title:"Properties",permalink:"/documentation/docs/core/state/properties"}},l=[{value:"\ud83d\udd28 Usage",id:"-usage",children:[]},{value:"\u26f3\ufe0f Sandbox",id:"\ufe0f-sandbox",children:[]},{value:"\ud83d\udced Props",id:"-props",children:[{value:"<code>initialValue</code>",id:"initialvalue",children:[]},{value:"<code>config</code>",id:"config",children:[]}]},{value:"\ud83d\udfe6 Typescript",id:"\ud83d\udfe6-typescript",children:[]}],s={toc:l};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("div",{className:"admonition admonition-warning alert alert--danger"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},"\ud83d\udd25"),"warning")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"WIP docs!"))),Object(i.b)("p",null,"A State holds Information we need to remember at a later point in time.\nIt is the foundation of AgileTs. Nearly everything is based or depends on the functionality of States.\nFor instance, a ",Object(i.b)("a",{parentName:"p",href:"/documentation/docs/core/collection"},"Collection")," is a set of States.\nWe instantiate a State with help of an existing ",Object(i.b)("a",{parentName:"p",href:"/documentation/docs/core/agile-instance"},"Agile Instance")," often called ",Object(i.b)("inlineCode",{parentName:"p"},"App"),".\nBy doing so, the State is automatically bound to the Agile Instance it was created from."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts"},'const MY_STATE = App.createState("Hello World");\n')),Object(i.b)("p",null,"The first property of ",Object(i.b)("inlineCode",{parentName:"p"},"createState()")," is the initial value of the State.\nAfter a successful instantiation,\nwe can start working with the State."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts"},'MY_STATE.set("Hello There"); // Set State Value to "Hello There"\nMY_STATE.undo(); // Undo latest change\nMY_STATE.is("Hello World"); // Check if State has a specific Value\nMY_STATE.persist(); // Persist State Value into a Storage\n')),Object(i.b)("p",null,"If you want to find out more about specific methods of the State, checkout the ",Object(i.b)("a",{parentName:"p",href:"/documentation/docs/core/state/methods"},"Methods")," Section.\nMost methods we use to modify, mutate and access the State are chainable."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts"},'MY_STATE.undo().set("Hello Hell").watch(() => {}).reset().invert().persist().type(String);\n')),Object(i.b)("h3",{id:"-usage"},"\ud83d\udd28 Usage"),Object(i.b)("p",null,"We might use a State, if we want to remember the active theme of our application,\nor the userId of the  current logged-in User."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts"},'const THEME_TYPE = App.createState("dark");\n// <- toggled theme switch\nTHEME_TYPE.set("light");\n')),Object(i.b)("p",null,"In the above example, we create a ",Object(i.b)("inlineCode",{parentName:"p"},"THEME_TYPE"),' State with the initial value "dark".\nAfter toggling the theme switch, we update the ',Object(i.b)("inlineCode",{parentName:"p"},"THEME_TYPE"),' to "light".'),Object(i.b)("h3",{id:"\ufe0f-sandbox"},"\u26f3\ufe0f Sandbox"),Object(i.b)("p",null,"Test the State yourself. It's only one click away. Just select your preferred Framework below."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://codesandbox.io/s/agilets-first-state-f12cz"},"React")),Object(i.b)("li",{parentName:"ul"},"Vue (coming soon)"),Object(i.b)("li",{parentName:"ul"},"Angular (coming soon)")),Object(i.b)("h2",{id:"-props"},"\ud83d\udced Props"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts"},"App.createState(initialValue, config);\n")),Object(i.b)("h3",{id:"initialvalue"},Object(i.b)("inlineCode",{parentName:"h3"},"initialValue")),Object(i.b)("p",null,"The first Value of the State."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts",metastring:"{1}","{1}":!0},"const MY_STATE = App.createState(\"hello there\");\nMY_STATE.value; // Returns 'hello there'\nMY_STATE.initialStateValue; // Returns 'hello there'\n")),Object(i.b)("p",null,"Later we can get access to that value with ",Object(i.b)("inlineCode",{parentName:"p"},".initialValue")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts"},"MY_STATE.intialValue;\n")),Object(i.b)("h3",{id:"config"},Object(i.b)("inlineCode",{parentName:"h3"},"config")),Object(i.b)("p",null,"Beside the initial value a ",Object(i.b)("inlineCode",{parentName:"p"},"State")," takes an optional configuration object."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts"},'const MY_STATE = App.createState("myInitialValue", {\n    key: "myKey",\n    dpendents: [MY_STATE_2]\n});\n')),Object(i.b)("p",null,"Here is a Typescript Interface for quick reference. However,\neach property is explained in more detail below."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts"},"export interface StateConfigInterface {\n    key?: StateKey;\n    dependents?: Array<Observer>;\n    isPlaceholder?: boolean;\n}\n")),Object(i.b)("br",null),Object(i.b)("h4",{id:"key"},Object(i.b)("inlineCode",{parentName:"h4"},"key")),Object(i.b)("p",null,"The key/name is an optional property that serves to identify a State later.\nA key is pretty useful during debug sessions or if we persist our State.\nThen, it automatically uses the ",Object(i.b)("inlineCode",{parentName:"p"},"key")," as persist-key, and we don't have to pass a separate key.\nWe recommend giving each State a unique ",Object(i.b)("inlineCode",{parentName:"p"},"key"),", since it has only advantages."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts"},'const MY_STATE = App.createState("myInitialValue", {\n    key: "myKey"\n});\n')),Object(i.b)("br",null),Object(i.b)("h4",{id:"dependents"},Object(i.b)("inlineCode",{parentName:"h4"},"dependents")),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},"\u2757\ufe0f"),"info")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Mainly used internally and has properly no use for you."))),Object(i.b)("p",null,"It defines which States depend on our State.\nThis means if our State gets mutated and ingested into the ",Object(i.b)("inlineCode",{parentName:"p"},"runtime"),",\nthe depending States will also be ingested into the ",Object(i.b)("inlineCode",{parentName:"p"},"runtime"),"."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts"},'const MY_STATE = App.createState("myInitialValue", {\n    dependents: [MY_STATE_2]\n});\n')),Object(i.b)("br",null),Object(i.b)("h4",{id:"isplaceholder"},Object(i.b)("inlineCode",{parentName:"h4"},"isPlaceholder")),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},"\u2757\ufe0f"),"info")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Mainly used internally and has properly no use for you."))),Object(i.b)("p",null,"With ",Object(i.b)("inlineCode",{parentName:"p"},"isPlaceholder")," we tell our State that it's a placeholder.\nOften States are placeholder when AgileTs needs to hold a reference to it,\nalthough the State hasn't been instantiated yet."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts"},'const MY_STATE = App.createState("myInitialValue", {\n    isPlaceholder: true\n});\n\nMY_STATE.exists(); // false\n')),Object(i.b)("h2",{id:"\ud83d\udfe6-typescript"},"\ud83d\udfe6 Typescript"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"State Class")," is almost 100% typesafe and takes an optional generic type for type safety of its ",Object(i.b)("inlineCode",{parentName:"p"},"value"),"."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts",metastring:"{1}","{1}":!0},'const MY_STATE = App.createState<string>("Hello World");\nMY_STATE.set(1); // Error\nMY_STATE.set("hello space"); // Success\n')),Object(i.b)("p",null,"Javascript users can also get rudimentary type safety with the ",Object(i.b)("inlineCode",{parentName:"p"},"type")," function."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts"},"MY_STATE.type(String); // Now State only accept State Values\n")),Object(i.b)("p",null,"Be aware that the ",Object(i.b)("inlineCode",{parentName:"p"},"type")," function currently only supports primitive types and does its type check at ",Object(i.b)("inlineCode",{parentName:"p"},"runtime"),"."))}p.isMDXComponent=!0},172:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=p(n),u=a,m=b["".concat(o,".").concat(u)]||b[u]||d[u]||i;return n?r.a.createElement(m,c(c({ref:t},s),{},{components:n})):r.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);